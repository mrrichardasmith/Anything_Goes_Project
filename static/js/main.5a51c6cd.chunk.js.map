{"version":3,"sources":["Components/Table/Table.js","Components/FakerData/FakerData.js","Components/BarChart/BarChart.js","Components/PolarArea/PolarArea.js","Components/RadarChart/RadarChart.js","Components/Charts/Charts.js","Components/Home/Home.js","Components/About/About.js","Components/Search/Search.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["Table","props","className","FakerData","image","faker","imageUrl","random","arrayElements","class","src","alt","name","firstName","lastName","avatar","jobTitle","jobDescriptor","BarChart","chartContainer","useRef","useState","chartInstance","setChartInstance","randomInt","Math","floor","chartConfig","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","useEffect","current","newChartInstance","Chartjs","ref","onClick","datasetIndex","newData","update","PolarArea","config","responsive","plugins","legend","position","title","display","text","RadarChart","elements","line","updateDataset","data1","Charts","Home","About","Search","term","setTerm","results","setResults","search","a","axios","get","params","action","list","origin","format","srsearch","query","length","timeoutId","setTimeout","clearTimeout","renderedResults","map","result","href","pageid","dangerouslySetInnerHTML","__html","snippet","value","onChange","e","target","App","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a51c6cd.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Table.css';\r\n\r\nexport default function Table(props)  {\r\n\r\n\r\n    return  (\r\n       \r\n       <div>\r\n            <h2 className=\"placeholder\">\r\n                Create a table component filled with data from Faker.js\r\n            </h2>\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport './FakerData.css';\r\n\r\nimport faker from  'faker';\r\n\r\nexport default function FakerData(props)    {\r\n\r\n    const image = faker.image.imageUrl();\r\n    const object = faker.random.arrayElements();\r\n\r\n    return(\r\n    <div className=\"Container\">\r\n        <div class=\"grid-container\">\r\n            <div className=\"item1\"><img src={image} alt=\"animal\" /></div>\r\n            <div className=\"item2\">\r\n                <ul className=\"profile\">\r\n                        <li>{faker.name.firstName()} {faker.name.lastName()}</li>\r\n                        <li><img src={faker.image.avatar()} alt=\"avatar\" /></li>\r\n                        <li>{faker.name.jobTitle()}</li>\r\n                        <li><p>{faker.name.jobDescriptor()}</p></li>\r\n                        \r\n                </ul>\r\n            </div>\r\n            <div className=\"item3\"></div>  \r\n            <div className=\"item4\">4</div>\r\n            <div className=\"item5\">5</div>\r\n            <div className=\"item6\">6</div>  \r\n        </div>\r\n    </div>\r\n    )\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport './BarChart.css';\r\nimport Chartjs from 'chart.js/auto';\r\n\r\n\r\nexport default function BarChart(props)    {\r\n\r\n    const chartContainer = useRef(null);\r\n    const [chartInstance, setChartInstance] = useState(null);\r\n\r\n    const randomInt = () => Math.floor(Math.random() * (10 - 1 + 1)) + 1;\r\n\r\n    const chartConfig = {\r\n        type: \"bar\",\r\n        data: {\r\n          labels: [\"Money\", \"Competition\", \"Academic\", \"Cameraderie\", \"Career\", \"Perspective\"],\r\n          datasets: [\r\n            {\r\n              label: \"Primary Motivation\",\r\n              data: [12, 19, 3, 5, 2, 3],\r\n              backgroundColor: [\r\n                \"rgba(255, 99, 132, 0.2)\",\r\n                \"rgba(54, 162, 235, 0.2)\",\r\n                \"rgba(255, 206, 86, 0.2)\",\r\n                \"rgba(75, 192, 192, 0.2)\",\r\n                \"rgba(153, 102, 255, 0.2)\",\r\n                \"rgba(255, 159, 64, 0.2)\"\r\n              ],\r\n              borderColor: [\r\n                \"rgba(255, 99, 132, 1)\",\r\n                \"rgba(54, 162, 235, 1)\",\r\n                \"rgba(255, 206, 86, 1)\",\r\n                \"rgba(75, 192, 192, 1)\",\r\n                \"rgba(153, 102, 255, 1)\",\r\n                \"rgba(255, 159, 64, 1)\"\r\n              ],\r\n              borderWidth: 1\r\n            }\r\n          ]\r\n        },\r\n        options: {\r\n          scales: {\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  beginAtZero: true\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      };\r\n\r\n      const updateDataset = (datasetIndex, newData) => {\r\n        chartInstance.data.datasets[datasetIndex].data = newData;\r\n        chartInstance.update();\r\n      };\r\n\r\n      const onButtonClick = () => {\r\n        const data = [\r\n            randomInt(),\r\n            randomInt(),\r\n            randomInt(),\r\n            randomInt(),\r\n            randomInt(),\r\n            randomInt()\r\n          ];\r\n          updateDataset(0, data);\r\n      };\r\n\r\n      useEffect(() => {\r\n        if (chartContainer && chartContainer.current) {\r\n          const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\r\n          setChartInstance(newChartInstance);\r\n        }\r\n      }, [chartContainer]);\r\n    \r\n    \r\n    return  (\r\n        <div className=\"container\">\r\n            <div>\r\n                <canvas ref={chartContainer} />\r\n            </div>\r\n              <div className=\"button\" type=\"submit\" onClick={onButtonClick}>Change Data</div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport './PolarArea.css';\r\n\r\nimport Chartjs from 'chart.js/auto';\r\n\r\nexport default function PolarArea(props)    {\r\n\r\n    const chartContainer = useRef(null);\r\n    const [chartInstance, setChartInstance] = useState(null);\r\n\r\n    const randomInt = () => Math.floor(Math.random() * (10 - 1 + 1)) + 1;\r\n\r\n    const data = {\r\n        // Change number of labels to test label positioning variation:\r\n        // Including a multi-line label for testing\r\n        labels: [\"HTML\", \"CSS\", \"Javascript\", \"React\", \"Redux\"],\r\n        datasets: [\r\n            {\r\n                label: \"1\",\r\n                data: [65, 59, 90, 81, 56, 55],\r\n                backgroundColor: [\r\n                    \"rgba(255, 99, 132, 0.2)\",\r\n                    \"rgba(54, 162, 235, 0.2)\",\r\n                    \"rgba(255, 206, 86, 0.2)\",\r\n                    \"rgba(75, 192, 192, 0.2)\",\r\n                    \"rgba(153, 102, 255, 0.2)\",\r\n                    \"rgba(255, 159, 64, 0.2)\"\r\n                  ]\r\n            },\r\n            \r\n        ]\r\n    };\r\n    \r\n    const config = {\r\n        type: 'polarArea',\r\n        data: data,\r\n        options: {\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              position: 'top',\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: 'Chart.js Polar Area Chart'\r\n            }\r\n          }\r\n        },\r\n      };\r\n\r\n      const updateDataset = (datasetIndex, newData) => {\r\n        chartInstance.data.datasets[datasetIndex].data = newData;\r\n        chartInstance.update();\r\n      };\r\n\r\n      const onButtonClick = () => {\r\n        const data = [\r\n            randomInt(),\r\n            randomInt(),\r\n            randomInt(),\r\n            randomInt(),\r\n            randomInt(),\r\n            randomInt()\r\n          ];\r\n          updateDataset(0, data);\r\n      };\r\n\r\n      useEffect(() => {\r\n        if (chartContainer && chartContainer.current) {\r\n          const newChartInstance = new Chartjs(chartContainer.current, config);\r\n          setChartInstance(newChartInstance);\r\n        }\r\n      }, [chartContainer]);\r\n\r\n    return(\r\n\r\n        <div className=\"container\">\r\n            <div>\r\n                <canvas ref={chartContainer} />\r\n            </div>\r\n              <div className=\"button\" type=\"submit\" onClick={onButtonClick}>Change Data</div>\r\n        </div>\r\n    )\r\n}  ","import React, { useState, useEffect, useRef } from 'react';\r\nimport './RadarChart.css';\r\nimport Chartjs from 'chart.js/auto';\r\n\r\n\r\nexport default function RadarChart(props)  {\r\n\r\n    const chartContainer = useRef(null);\r\n    const [chartInstance, setChartInstance] = useState(null);\r\n\r\n    const randomInt = () => Math.floor(Math.floor(Math.random()*(100-1+1)+1));\r\n\r\n    const data = {\r\n        // Change number of labels to test label positioning variation:\r\n        // Including a multi-line label for testing\r\n        labels: [\"Eating\", [\"Drinking\", \"water\"], \"Sleeping\", \"Designing\", \"Coding\", \"Cycling\"],\r\n        datasets: [\r\n            {\r\n                label: \"Jack\",\r\n                data: [65, 59, 90, 81, 56, 55],\r\n                backgroundColor: 'rgba(153, 153, 255, 0.1)'\r\n            },\r\n            {\r\n                label: \"Jill\",\r\n                data: [28, 48, 40, 19, 96, 27],\r\n                backgroundColor: 'rgba(255, 153, 153, 0.1)'\r\n            }\r\n        ]\r\n    };\r\n\r\n    const config = {\r\n        type: 'radar',\r\n        data: data,\r\n        options: {\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              position: 'top',\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: 'Radar Chart'\r\n            }\r\n          },\r\n          elements: {\r\n            line: {\r\n              borderWidth: 3\r\n            }\r\n          }\r\n        },\r\n      };\r\n\r\n      const updateDataset = (datasetIndex, newData) => {\r\n        chartInstance.data.datasets[datasetIndex].data = newData;\r\n        chartInstance.update();\r\n      };\r\n\r\n      useEffect(() => {\r\n        if (chartContainer && chartContainer.current) {\r\n          const newChartInstance = new Chartjs(chartContainer.current, config);\r\n          setChartInstance(newChartInstance);\r\n        }\r\n      }, [chartContainer]);\r\n\r\n      const onButtonClick = () => {\r\n        const data = [\r\n            randomInt(),\r\n            randomInt(),\r\n            randomInt(),\r\n            randomInt(),\r\n            randomInt(),\r\n            randomInt()\r\n          ];\r\n          const data1 = [\r\n            randomInt(),\r\n            randomInt(),\r\n            randomInt(),\r\n            randomInt(),\r\n            randomInt(),\r\n            randomInt()\r\n          ]; \r\n          updateDataset(0, data);\r\n          updateDataset(1, data1);\r\n      };\r\n\r\n      \r\n    \r\n    return  (\r\n        <div className=\"container\">\r\n          <div>\r\n            <canvas ref={chartContainer} />\r\n          </div>\r\n          <div className=\"button\" type=\"submit\" onClick={onButtonClick}>Change Data</div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './Charts.css';\r\n\r\nimport BarChart from '../BarChart/BarChart';\r\nimport PolarArea from '../PolarArea/PolarArea';\r\nimport RadarChart from '../RadarChart/RadarChart';\r\n\r\nexport default function Charts(props)   {\r\n    return  (\r\n        <>\r\n            <BarChart />\r\n            <PolarArea />\r\n            <RadarChart />\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport './Home.css';\r\n\r\nexport default function Home(props) {\r\n    return(\r\n        <div className=\"container\">Here we have a home page</div>\r\n    )\r\n}","import React from 'react';\r\nimport './About.css';\r\n\r\nexport default function About(props)    {\r\n    return (\r\n        <div className=\"container\">This is where we create the narrative for the project</div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Search = () => {\r\n  const [term, setTerm] = useState('programming');\r\n  const [results, setResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const search = async () => {\r\n      const { data } = await axios.get('https://en.wikipedia.org/w/api.php', {\r\n        params: {\r\n          action: 'query',\r\n          list: 'search',\r\n          origin: '*',\r\n          format: 'json',\r\n          srsearch: term,\r\n        },\r\n      });\r\n\r\n      setResults(data.query.search);\r\n    };\r\n\r\n    if (term && !results.length) {\r\n      search();\r\n    } else {\r\n      const timeoutId = setTimeout(() => {\r\n        if (term) {\r\n          search();\r\n        }\r\n      }, 1000);\r\n\r\n      return () => {\r\n        clearTimeout(timeoutId);\r\n      };\r\n    }\r\n  }, [term]);\r\n\r\n  const renderedResults = results.map((result) => {\r\n    return (\r\n      <div key={result.pageid} className=\"item\">\r\n        <div className=\"right floated content\">\r\n          <a\r\n            className=\"ui button\"\r\n            href={`https://en.wikipedia.org?curid=${result.pageid}`}\r\n          >\r\n            Go\r\n          </a>\r\n        </div>\r\n        <div className=\"content\">\r\n          <div className=\"header\">{result.title}</div>\r\n          <span dangerouslySetInnerHTML={{ __html: result.snippet }}></span>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"ui form\">\r\n        <div className=\"field\">\r\n          <p>Example of a Debounce Search Component using Wikapedia Api and Sematic UI for the style</p>\r\n          <label>Enter Search Term</label>\r\n          <input\r\n            value={term}\r\n            onChange={(e) => setTerm(e.target.value)}\r\n            className=\"input\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"ui celled list\">{renderedResults}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import './App.css';\r\nimport faker from  'faker'; \r\nimport Table from '../Table/Table';\r\nimport FakerData from '../FakerData/FakerData';\r\nimport Charts from '../Charts/Charts';\r\nimport Home from '../Home/Home';\r\nimport About from '../About/About';\r\nimport Search from '../Search/Search';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n    \r\nexport default function App() {\r\n  \r\n      return (\r\n        <>\r\n        <div className=\"container\">\r\n          <div className=\"header\">\r\n            <h1 className=\"title\">The Anything Goes Project</h1>\r\n            <h3 className=\"description\">A project space for collaboration and practicing skill gaps.</h3>\r\n            <br />\r\n          </div>\r\n        </div>\r\n        <Router>\r\n          <div>\r\n            <nav>\r\n              <ul className=\"row nav\">\r\n                <li>\r\n                  <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/about\">About</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/charts\">Charts</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/table\">Data Table</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/faker_data\">Faker</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/search\">Search</Link>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n            <Switch>\r\n              <Route path=\"/about\">\r\n                <About />\r\n              </Route>\r\n              <Route path=\"/charts\">\r\n                <Charts />\r\n              </Route>\r\n              <Route path=\"/table\">\r\n                <Table />\r\n              </Route>\r\n              <Route path=\"/faker_data\">\r\n                <FakerData />\r\n              </Route>\r\n              <Route path=\"/search\">\r\n                <Search />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <Home />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n        </>\r\n      );\r\n    };\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}